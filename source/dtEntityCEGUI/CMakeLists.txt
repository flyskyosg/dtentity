SET(LIB_NAME dtEntityCEGUI)

FIND_PACKAGE(CEGUI REQUIRED)

LIST(APPEND LIB_SOURCES
  ${SOURCE_PATH}/gui.cpp
  ${SOURCE_PATH}/resourceprovider.cpp
  scriptmodule.cpp
)

INCLUDE_DIRECTORIES(
	${CEGUI_INCLUDE_DIR}
)

SET(HEADER_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../../include/${LIB_NAME})

SET(LIB_PUBLIC_HEADERS
  ${HEADER_PATH}/ceguicomponent.h
  #${HEADER_PATH}/guiwidgetwrapper.h
  #${HEADER_PATH}/guiwrapper.h
  ${HEADER_PATH}/export.h
  ${HEADER_PATH}/resourceprovider.h
  ${HEADER_PATH}/scriptmodule.h
)

SET(LIB_SOURCES
  ceguicomponent.cpp
  #guiwidgetwrapper.cpp
  #guiwrapper.cpp
  resourceprovider.cpp
  scriptmodule.cpp
)

SET(LIB_SOURCES_REPLACE
  
)

SET(WRAPLIBRARIES dtEntity ${CEGUI_LIBRARIES} ${CEGUI_OPENGLRENDERER_LIBRARIES})
REPLACE_SIDS_IN_SOURCE(LIB_SOURCES_OUT ${LIB_SOURCES_REPLACE})

ADD_LIBRARY(${LIB_NAME} ${DTENTITY_LIBS_DYNAMIC_OR_STATIC}
  ${LIB_PUBLIC_HEADERS}
  ${LIB_SOURCES}
  ${LIB_SOURCES_OUT}
  ${LIB_SOURCES_REPLACE}
)

TARGET_LINK_LIBRARIES( ${LIB_NAME} ${WRAPLIBRARIES})


SET_TARGET_PROPERTIES(${LIB_NAME}
                     PROPERTIES DEFINE_SYMBOL DTENTITY_CEGUI_LIBRARY)
INCLUDE(ModuleInstall OPTIONAL)

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")


