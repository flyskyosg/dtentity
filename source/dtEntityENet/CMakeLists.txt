SET(LIB_NAME dtEntityENet)

IF (WIN32)
ADD_DEFINITIONS(-DNOMINMAX)
ADD_DEFINITIONS(-DPOSH_DLL)
ENDIF (WIN32)

FIND_PACKAGE(ENet REQUIRED)
FIND_PACKAGE(Qt4 REQUIRED)

INCLUDE_DIRECTORIES( 
  ${CMAKE_CURRENT_SOURCE_DIR}/../../include/
  ${OSG_INCLUDE_DIRS}
  ${ENET_INCLUDE_DIR}
  ${QT_INCLUDE_DIR}
)

SET(HEADER_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../../include/${LIB_NAME})
SET(SOURCE_PATH ${CMAKE_CURRENT_SOURCE_DIR})

SET(LIB_PUBLIC_HEADERS
   ${HEADER_PATH}/export.h
   ${HEADER_PATH}/netcomponent.h
)

SET(LIB_SOURCES
	 ${SOURCE_PATH}/netcomponent.cpp
	 ${SOURCE_PATH}/pluginfactory.cpp
)

ADD_LIBRARY(${LIB_NAME} SHARED
    ${LIB_PUBLIC_HEADERS}
    ${LIB_SOURCES}
)

TARGET_LINK_LIBRARIES(${LIB_NAME}                        
                      ${OSG_LIBRARIES}
                      ${OPENTHREADS_LIBRARIES}
                      ${ENET_LIBRARIES}
		      ${QT_QTCORE_LIBRARY}
		      dtEntity
                      )
IF (MSVC)
  TARGET_LINK_LIBRARIES(${LIB_NAME} wsock32 ws2_32.lib winmm.lib)  
ENDIF (MSVC)

SET_TARGET_PROPERTIES(${LIB_NAME}
                     PROPERTIES DEFINE_SYMBOL DT_ENTITY_ENET_LIBRARY)                     
INCLUDE(ModuleInstall OPTIONAL)

IF (MSVC)
  SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES IMPORT_PREFIX "../")
  SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")
  SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES OUTPUT_NAME plugins/${LIB_NAME})
  SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES DEBUG_OUTPUT_NAME plugins/${LIB_NAME})
ENDIF (MSVC) 

