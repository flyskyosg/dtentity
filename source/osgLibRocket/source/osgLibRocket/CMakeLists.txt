SET(LIB_NAME osgLibRocket)

SET(HEADER_PATH ${CMAKE_CURRENT_SOURCE_DIR}/include/osgLibRocket)
SET(SOURCE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/source)

SET(LIB_PUBLIC_HEADERS
	${HEADER_PATH}/export.h
	${HEADER_PATH}/FileInterface
	${HEADER_PATH}/GuiNode
	${HEADER_PATH}/RenderInterface
	${HEADER_PATH}/SystemInterface
)

SET(LIB_SOURCES

	${SOURCE_PATH}/FileInterface.cpp
	${SOURCE_PATH}/GuiNode.cpp
	${SOURCE_PATH}/RenderInterface.cpp
	${SOURCE_PATH}/SystemInterface.cpp
)


INCLUDE_DIRECTORIES(
  ${CMAKE_CURRENT_SOURCE_DIR}/include
  ${OSG_INCLUDE_DIRS}
  ${OPENTHREADS_INCLUDE_DIR}
  ${LIBROCKET_INCLUDE_DIR}
)

IF(BUILD_OSGLIBROCKET_STATIC)
    SET(OSGLIBROCKET_STATIC_SHARED "STATIC")
ELSE ()
   ADD_DEFINITIONS(-DOSGLIBROCKET_DYNAMIC)
   SET(OSGLIBROCKET_STATIC_SHARED "SHARED")
ENDIF()

ADD_LIBRARY(    ${LIB_NAME} ${OSGLIBROCKET_STATIC_SHARED}
                ${LIB_PUBLIC_HEADERS}
                ${LIB_SOURCES}
)

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES DEFINE_SYMBOL OSGLIBROCKET_LIBRARY)

INCLUDE(ModuleInstall OPTIONAL)


TARGET_LINK_LIBRARIES(${LIB_NAME}   ${OPENSCENEGRAPH_LIBRARIES}
									${OPENTHREADS_LIBRARIES}
									${LIBROCKET_CORE_LIBRARY}
									${LIBROCKET_CONTROLS_LIBRARY}
									${LIBROCKET_DEBUGGER_LIBRARY}
)

IF (MSVC)
  SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")
  SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES OUTPUT_NAME ${LIB_NAME})
  SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES DEBUG_OUTPUT_NAME ${LIB_NAME})
ENDIF (MSVC) 


INSTALL(FILES source/FindOsgLibRocket.cmake DESTINATION cmake)
