#pragma once

/* osgLibRocket, an interface for OpenSceneGraph to use LibRocket
*
*  Permission is hereby granted, free of charge, to any person obtaining a copy
*  of this software and associated documentation files (the "Software"), to deal
*  in the Software without restriction, including without limitation the rights
*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
*  copies of the Software, and to permit persons to whom the Software is
*  furnished to do so, subject to the following conditions:
*
*  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
*  THE SOFTWARE.
*/
//
// This code is copyright (c) 2011 Martin Scheffler martin.scheffler@googlemail.com
//

#include <osgLibRocket/export.h>
#include <Rocket/Core/Core.h>
#include <Rocket/Debugger/Debugger.h>
#include <osgDB/FileUtils>

namespace osgLibRocket
{
	class OSGLIBROCKET_EXPORT FileInterface : public Rocket::Core::FileInterface
	{
		virtual Rocket::Core::FileHandle Open(const Rocket::Core::String& path);

		virtual void Close(Rocket::Core::FileHandle file);

		virtual size_t Read(void* buffer, size_t size, Rocket::Core::FileHandle file);

		virtual bool Seek(Rocket::Core::FileHandle file, long offset, int origin);

		virtual size_t Tell(Rocket::Core::FileHandle file);

	};
}
